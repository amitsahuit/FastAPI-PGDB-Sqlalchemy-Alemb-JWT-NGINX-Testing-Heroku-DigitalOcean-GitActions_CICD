name: Build and Deploy Fastapi code
on: [push, pull_request] # activates on pushing and pulling code from all branches
  # push:
  #   branches:
  #     - "main"
  #     - "another_branch"
  # pull_request:
  #   branches:
  #     - "test_branch"

# Global env variable accessible from all jobs
# env:
#   DATABASE_HOSTNAME=localhost

jobs:
  fastapiJob1:
    # Job specific env variable.
    environment:
      name: TEST # This name should be same as the name which we provided in github
    env:
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      # - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." # Unix commands
      # - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      # - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: pulling git repo
        uses: actions/checkout@v2 # searched with checkout keyword in MARKETPLACE
      # - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      # - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      # - name: List files in the repository
      #   run: |
      #     ls ${{ github.workspace }}
      - name: Install python latest version
        uses: actions/setup-python@v2 # copied from https://github.com/marketplace/actions/setup-python
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          # architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: installing pytest
        run: pip install pytest
          # pip install pytest
          # pytest
      - name: Executing test cases
        run:  pytest # Or we can use pytest -v -s
      - run: echo "🍏 This job's status is ${{ job.status }}."
